<?php
/**
 * @file
 * A block that allows users to see whether they are logged in or not
 */

/**
 * Implements hook_block_info()
 */
function iishconference_userblock_block_info() {
	$blocks['user_block'] = array(
		'info'       => t('User logged in?'),
		'cache'      => DRUPAL_NO_CACHE,
		'status'     => true,
		'region'     => 'header',
		'weight'     => 0,
		'visibility' => BLOCK_VISIBILITY_NOTLISTED,
	);

	return $blocks;
}

/**
 * Implements hook_block_view()
 */
function iishconference_userblock_block_view($delta = '') {
	switch ($delta) {
		case 'user_block':
			$block['subject'] = '<none>';
			$block['content'] = ConferenceMisc::getCleanHTML(iishconference_userblock_block_content(), true);

			return $block;
			break;
	}
}

/**
 * Returns the user block's content
 *
 * @return string The HTML to build the content
 */
function iishconference_userblock_block_content() {
	if (LoggedInUserDetails::isLoggedIn()) {
		return '<span class="conference-userblock">' . t('Welcome') . ' ' .
		l(LoggedInUserDetails::getUser()->getFullName(), SettingsApi::getSetting(SettingsApi::PATH_FOR_MENU) . 'personal-page') . ' | ' .
		l(t('Log out'), SettingsApi::getSetting(SettingsApi::PATH_FOR_MENU) . 'logout') . '</span>';
	}
	else {
		return '<span class="conference-userblock">' . t('Please !link.',
			array('!link' => l(t('log in'), SettingsApi::getSetting(SettingsApi::PATH_FOR_MENU) . 'login'))) . '</span>';
	}
}